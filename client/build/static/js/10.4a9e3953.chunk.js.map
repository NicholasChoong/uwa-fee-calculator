{"version":3,"sources":["components/FeeCalculator/FeeCourseAndYear/index.js"],"names":["FeeCourseAndYear","props","data","updateData","courseList","startYearList","updateFee","prevPage","updatePage","page","updateUnitList","updateEstimatedFee","useFetch","request","response","loading","error","useState","courseCode","year","label","majorName","selection","setSelection","courseName","setCourseName","majorList","setMajorList","pressed","setPressed","loadUnits","useCallback","a","post","feeYear","unitsData","console","ok","newUnitList","Object","entries","map","value","loadMajorFee","majorFeeData","newMajorFee","course_name","loadMajor","course","majorData","newMajorList","majorCode","loadFee","feeData","fee","feeCategory","PAGES","FEE_PAYING_SUMMARY","STUDY_ABOARD_SUMMARY","loadData","Promise","all","D_SUMMARY","style","textAlign","fontWeight","width","margin","onSubmit","event","preventDefault","htmlFor","className","name","inputId","options","isClearable","placeholder","onChange","prev","defaultValue","isLoading","isDisabled","overflow","id","type","onClick","disabled","COURSE_AND_YEAR"],"mappings":"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","file":"static/js/10.4a9e3953.chunk.js","sourcesContent":["import React, { useState, useCallback } from 'react'\r\nimport { useFetch } from 'use-http'\r\nimport Select from 'react-select'\r\nimport PAGES from '../../../libs/pageEnum'\r\n\r\nconst FeeCourseAndYear = props => {\r\n  const {\r\n    data,\r\n    updateData,\r\n    courseList,\r\n    startYearList,\r\n    updateFee,\r\n    prevPage,\r\n    updatePage,\r\n    page,\r\n    updateUnitList,\r\n    updateEstimatedFee\r\n  } = props\r\n  const [request, response, loading, error] = useFetch()\r\n  const [selection, setSelection] = useState({\r\n    ...data,\r\n    courseCode: '',\r\n    year: startYearList?.[0]?.label,\r\n    majorName: ''\r\n  })\r\n  const [courseName, setCourseName] = useState('')\r\n  const [majorList, setMajorList] = useState([])\r\n  const [pressed, setPressed] = useState(false)\r\n\r\n  const loadUnits = useCallback(async () => {\r\n    const unitsData = await request.post('/Calculator/GetUnitsForMajor', {\r\n      majorName: selection.majorName,\r\n      feeYear: selection.feeYear\r\n    })\r\n    if (error) console.error(error)\r\n    if (response.ok) {\r\n      const newUnitList = Object.entries(unitsData[0]).map(\r\n        ([unitCode, unitName]) => ({\r\n          value: unitCode,\r\n          label: unitName\r\n        })\r\n      )\r\n      updateUnitList(newUnitList)\r\n    }\r\n  }, [request, response, error, selection, updateUnitList])\r\n\r\n  const loadMajorFee = useCallback(async () => {\r\n    const majorFeeData = await request.post('/Calculator/GetFeeForMajor', {\r\n      ...selection,\r\n      majorName: 'all'\r\n    })\r\n    if (error) console.error(error)\r\n    if (response.ok) {\r\n      const newMajorFee = {\r\n        ...majorFeeData[0],\r\n        course_name: courseName\r\n      }\r\n      updateEstimatedFee(newMajorFee)\r\n    }\r\n  }, [request, response, error, selection, courseName, updateEstimatedFee])\r\n\r\n  const loadMajor = useCallback(\r\n    async courseCode => {\r\n      const majorData = await request.post('/Calculator/GetMajorsForCourse', {\r\n        course: courseCode\r\n      })\r\n      if (error) console.error(error)\r\n      if (response.ok) {\r\n        const newMajorList = Object.entries(majorData[0]).map(\r\n          ([majorCode, majorName]) => ({\r\n            value: majorCode,\r\n            label: majorName + ` [${majorCode}]`\r\n          })\r\n        )\r\n        setMajorList(newMajorList)\r\n      }\r\n    },\r\n    [request, response, error, setMajorList]\r\n  )\r\n\r\n  const loadFee = useCallback(async () => {\r\n    const feeData = await request.post('/Calculator/GetCourseFee', selection)\r\n    if (error) console.error(error)\r\n    if (response.ok) {\r\n      const fee = feeData[0]\r\n      updateFee(fee)\r\n      if (selection.feeCategory !== 'INTSA') {\r\n        updatePage(PAGES.FEE_PAYING_SUMMARY)\r\n      } else {\r\n        updatePage(PAGES.STUDY_ABOARD_SUMMARY)\r\n      }\r\n    }\r\n  }, [request, response, error, selection, updateFee, updatePage])\r\n\r\n  const loadData = async () => {\r\n    await Promise.all([loadMajorFee(), loadUnits()])\r\n    updatePage(PAGES.D_SUMMARY)\r\n  }\r\n\r\n  const changeCourseHandler = event => {\r\n    setSelection(prev => ({ ...prev, courseCode: event?.value }))\r\n    setPressed(false)\r\n    setCourseName(event?.label)\r\n    if (event?.value) {\r\n      loadMajor(event.value)\r\n    }\r\n  }\r\n\r\n  const changeYearHandler = event => {\r\n    setSelection(prev => ({ ...prev, year: `Starting ${event?.value}` }))\r\n    setPressed(false)\r\n  }\r\n\r\n  const changeMajorHandler = event => {\r\n    setSelection(prev => ({ ...prev, majorName: event?.label }))\r\n    setPressed(false)\r\n  }\r\n\r\n  const submitHandler = event => {\r\n    event.preventDefault()\r\n    setPressed(true)\r\n    updateData({ ...selection, majorName: '' })\r\n    if (selection.feeCategory[0] !== 'D' || selection.feeCategory === 'DFPG') {\r\n      loadFee()\r\n    } else {\r\n      loadData()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <h1 style={{ fontWeight: 'bold' }}>Select Your Info:</h1>\r\n      <br />\r\n      <p>Select your course and starting year</p>\r\n      <p>Click &quot;Help&quot; for descriptions.</p>\r\n      <hr style={{ width: '50%', margin: 'auto' }} />\r\n      <br />\r\n      <br />\r\n      {error && 'Error!'}\r\n      {loading && 'Loading...'}\r\n      <form onSubmit={submitHandler}>\r\n        <label htmlFor='course'>Select Your Course:</label>\r\n        <div className='row' style={{ width: '25%', margin: 'auto' }}>\r\n          <Select\r\n            name='course'\r\n            inputId='course'\r\n            options={courseList}\r\n            isClearable\r\n            placeholder={`eg. ${courseList?.[0]?.label}`}\r\n            onChange={changeCourseHandler}\r\n          />\r\n        </div>\r\n        <br />\r\n        <label htmlFor='startyear'>Select Your Starting Year:</label>\r\n        <div className='row' style={{ width: '25%', margin: 'auto' }}>\r\n          <Select\r\n            name='startyear'\r\n            inputId='startyear'\r\n            options={startYearList}\r\n            isClearable\r\n            placeholder='Choose your starting year'\r\n            defaultValue={startYearList?.[0]}\r\n            onChange={changeYearHandler}\r\n          />\r\n        </div>\r\n        <br />\r\n        {data.feeCategory === 'DUG' && (\r\n          <>\r\n            <label htmlFor='majorSelect'>Select Your Major:</label>\r\n            <div className='row' style={{ width: '25%', margin: 'auto' }}>\r\n              <Select\r\n                name='majorSelect'\r\n                inputId='majorSelect'\r\n                options={majorList}\r\n                isClearable\r\n                placeholder={\r\n                  majorList?.[0]?.label\r\n                    ? `eg. ${majorList?.[0]?.label}`\r\n                    : 'Please select your course first'\r\n                }\r\n                isLoading={loading}\r\n                isDisabled={loading || !selection.courseCode}\r\n                onChange={changeMajorHandler}\r\n              />\r\n            </div>\r\n          </>\r\n        )}\r\n        <br />\r\n        <br />\r\n        <div style={{ overflow: 'auto' }}>\r\n          <div style={{ textAlign: 'center' }}>\r\n            <button\r\n              id='prevBtn'\r\n              type='button'\r\n              onClick={prevPage}\r\n              disabled={pressed || page !== PAGES.COURSE_AND_YEAR}\r\n            >\r\n              Previous\r\n            </button>\r\n            <button\r\n              id='nextBtn'\r\n              disabled={\r\n                pressed ||\r\n                page !== PAGES.COURSE_AND_YEAR ||\r\n                loading ||\r\n                (data.feeCategory !== 'DUG'\r\n                  ? !selection.courseCode || !selection.year\r\n                  : !selection.majorName)\r\n              }\r\n              type='submit'\r\n            >\r\n              Next\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FeeCourseAndYear\r\n"],"sourceRoot":""}